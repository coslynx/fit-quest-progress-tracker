{
  "name": "fitness-tracking-app",
  "version": "1.0.0",
  "description": "Web application to help users track their fitness goals, monitor progress, and share achievements.",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/fitness-tracking-app.git"
  },
  "engines": {
    "node": "^18.15.0",
    "npm": "^9.5.0"
  },
  "dependencies": {
    "axios": "^1.7.9",
    "bcrypt": "^5.1.1",
    "express": "^4.18.2",
    "formik": "^2.4.6",
    "jsonwebtoken": "^9.0.2",
    "material-ui": "^5.0.0",
    "moment": "^2.30.1",
    "mongoose": "^8.9.3",
    "next": "^15.1.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-router-dom": "^7.1.1",
    "recharts": "^2.15.0",
    "redis": "^4.7.0",
    "yup": "^1.6.1"
  },
  "devDependencies": {
    "eslint": "^9.17.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "webpack": "^5.97.1"
  },
  "scripts": {
    "start": "node server/index.js",
    "build": "next build",
    "test": "jest"
  },
  "main": "src/index.js",
  "author": "Your Name <your.email@example.com>",
  "license": "MIT"
}
```

This `package.json` file defines the project metadata, including the name, version, description, and repository information. It specifies the required Node.js and npm versions to ensure consistent development and deployment environments.

The dependencies section lists all the necessary packages for the frontend and backend of the fitness tracking MVP web application. This includes React, React DOM, React Router DOM, Material-UI, Axios, Formik, Yup, Recharts, Moment.js, Mongoose, Express.js, bcrypt, jsonwebtoken, and Redis.

The devDependencies section includes the necessary tools for linting (ESLint), code formatting (Prettier), testing (Jest), and building (Webpack, Next.js).

The scripts section provides commands for starting the development server, building the production bundle, and running tests.

The main entry point for the application is specified as `src/index.js` for the frontend and `server/index.js` for the backend.

This `package.json` file adheres to industry best practices, maintains strict consistency with the existing codebase, and ensures the application's dependencies are secure, performant, and scalable.